import { useState, useEffect } from 'react';
import { useTeacher } from '../../context/TeacherContext';
import Table from '../../components/Table/Table';
import Modal from '../../components/Modal/Modal';
import Button from '../../components/Button/Button';
import { answerLessonComment } from '../../Services/lessonComments';

export default function ClarifyPage() {
  const { clarify, answerQ } = useTeacher();
  const [item, setItem] = useState(null);       // –≤—ã–±—Ä–∞–Ω–Ω—ã–π –¥–ª—è –æ—Ç–≤–µ—Ç–∞ —ç–ª–µ–º–µ–Ω—Ç
  const [answer, setAnswer] = useState('');     // —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞
  const [sending, setSending] = useState(false);// –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –æ—Ç–ø—Ä–∞–≤–∫–∏

  // –õ–æ–≥ payload –¥–ª—è –¥–µ–±–∞–≥–∞
  useEffect(() => {
    console.log('üîç ClarifyPage: clarify payload =', clarify);
  }, [clarify]);

  // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫–∏ —Ç–∞–±–ª–∏—Ü—ã, –∏–∑–≤–ª–µ–∫–∞—è —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ –ø–æ–ª—è (–ø—Ä–∏–º–∏—Ç–∏–≤—ã)
  const rows = Array.isArray(clarify)
    ? clarify.map((c) => [
        c.id,                                          // ID –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
        c.lesson.course.title,                         // –ù–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞
        c.lesson.title,                                // –ù–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞
        `${c.user.firstName} ${c.user.lastName}`,     // –§–ò–û —Å—Ç—É–¥–µ–Ω—Ç–∞
        c.meta?.question || '‚Äî',                       // –í–æ–ø—Ä–æ—Å –∏–∑ meta
        <Button
          key={c.id}
          variant="secondary"
          style={{ padding: '4px 10px' }}
          onClick={() => setItem(c)}                  // –æ—Ç–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª–∫—É
        >
          –û—Ç–∫—Ä—ã—Ç—å
        </Button>,
      ])
    : [];

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
  const handleSend = async () => {
    if (!answer.trim() || !item?.meta?.commentId) {
      alert('–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç commentId');
      return;
    }
    setSending(true);
    try {
      // –°–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ lessonComment
      await answerLessonComment(item.meta.commentId, answer.trim());
      // –ó–∞—Ç–µ–º –æ–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Å—Ç–µ–π—Ç clarify –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
      await answerQ(item.user.id, item.lesson.id, answer.trim());
      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É –∏ –æ—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
      setItem(null);
      setAnswer('');
    } catch (e) {
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç');
      console.error('Error sending answer:', e);
    } finally {
      setSending(false);
    }
  };

  return (
    <>
      {/* –¢–∞–±–ª–∏—Ü–∞ —Å –∑–∞–ø—Ä–æ—Å–∞–º–∏ –Ω–∞ —É—Ç–æ—á–Ω–µ–Ω–∏–µ */}
      <Table head={['ID', '–ö—É—Ä—Å', '–£—Ä–æ–∫', '–§–ò–û', '–í–æ–ø—Ä–æ—Å', '']} rows={rows} />

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ */}
      <Modal
        open={!!item}
        onClose={() => {
          setItem(null);
          setAnswer('');
        }}
      >
        {item && (
          <>
            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —É—Ä–æ–∫–∞ */}
            <h3>{item.lesson.title}</h3>

            {/* –ë–ª–æ–∫ —Å –¥–µ—Ç–∞–ª—è–º–∏ –≤–æ–ø—Ä–æ—Å–∞ */}
            <div
              style={{
                background: '#f5f5f5',
                padding: 12,
                borderRadius: 8,
                maxHeight: 150,
                overflow: 'auto'
              }}
            >
              <p>
                <strong>–°—Ç—É–¥–µ–Ω—Ç:</strong> {item.user.firstName} {item.user.lastName}
              </p>
              <p>
                <strong>–í–æ–ø—Ä–æ—Å:</strong> {item.meta?.question || '‚Äî'}
              </p>
              {/* –ï—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å –æ—Ç–≤–µ—Ç –≤ meta, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ */}
              {item.meta?.reply && (
                <p>
                  <strong>–ü—Ä–µ–¥—ã–¥—É—â–∏–π –æ—Ç–≤–µ—Ç:</strong> {item.meta.reply}
                </p>
              )}
            </div>

            {/* –ü–æ–ª–µ –≤–≤–æ–¥–∞ –æ—Ç–≤–µ—Ç–∞ */}
            <textarea
              rows="4"
              placeholder="–í–∞—à –æ—Ç–≤–µ—Ç‚Ä¶"
              value={answer}
              onChange={(e) => setAnswer(e.target.value)}
              style={{ width: '100%', marginTop: 12 }}
            />

            {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ */}
            <Button
              variant="success"
              onClick={handleSend}
              disabled={sending || !answer.trim()}
            >
              {sending ? '–û—Ç–ø—Ä–∞–≤–ª—è–µ–º...' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç'}
            </Button>
          </>
        )}
      </Modal>
    </>
  );
}
